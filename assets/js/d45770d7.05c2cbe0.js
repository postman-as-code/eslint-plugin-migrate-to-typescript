"use strict";(self.webpackChunk_website=self.webpackChunk_website||[]).push([[6203],{876:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var i=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),g=p(n),d=r,m=g["".concat(o,".").concat(d)]||g[d]||c[d]||s;return n?i.createElement(m,l(l({ref:t},u),{},{components:n})):i.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=g;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var p=2;p<s;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7003:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var i=n(7896),r=n(1461),s=(n(2784),n(876)),l=["components"],a={sidebar_position:1,displayed_sidebar:"migrate2typescriptSidebar"},o="Getting Started",p={unversionedId:"plugins/migrate-to-typescript/getting-started",id:"plugins/migrate-to-typescript/getting-started",title:"Getting Started",description:"In 5 minutes \u23f0 you will start using the eslint-plugin-migrate-to-typescript plugin",source:"@site/docs/plugins/migrate-to-typescript/getting-started.md",sourceDirName:"plugins/migrate-to-typescript",slug:"/plugins/migrate-to-typescript/getting-started",permalink:"/eslint-plugins/docs/plugins/migrate-to-typescript/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"migrate2typescriptSidebar"},sidebar:"migrate2typescriptSidebar",next:{title:"Rules",permalink:"/eslint-plugins/docs/category/rules"}},u={},c=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"For the full <code>eslint</code> configuration files format see eslint eslint&#39;s official document - Configuration Files.",id:"for-the-full-eslint-configuration-files-format-see-eslint-eslints-official-document---configuration-files",level:6},{value:"Usage",id:"usage",level:2},{value:"Plugin&#39;s configs",id:"plugins-configs",level:2},{value:"node-js-with-ts",id:"node-js-with-ts",level:3},{value:"See what rules this config includes here",id:"see-what-rules-this-config-includes-here",level:6},{value:"node-ts-only",id:"node-ts-only",level:3},{value:"See what rules this config includes here",id:"see-what-rules-this-config-includes-here-1",level:6},{value:"Use rules manually",id:"use-rules-manually",level:2}],g={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"getting-started"},"Getting Started"),(0,s.kt)("p",null,"In 5 minutes \u23f0 you will start using the ",(0,s.kt)("inlineCode",{parentName:"p"},"eslint-plugin-migrate-to-typescript")," plugin"),(0,s.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Prerequisites: ",(0,s.kt)("a",{parentName:"li",href:"https://nodejs.org/en/"},"Node.js")," (",(0,s.kt)("inlineCode",{parentName:"li"},"^12.22.0"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"^14.17.0"),", or ",(0,s.kt)("inlineCode",{parentName:"li"},">=16.0.0"),") built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)")),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"with ",(0,s.kt)("inlineCode",{parentName:"p"},"npm"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"# eslint-plugin-migrate-to-typescript has peer-dependencies that must be installed together with it\n# install peer-deps\nnpm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/types @typescript-eslint/utils\n# then install the plugin\nnpm install --save-dev  eslint-plugin-migrate-to-typescript\n")),(0,s.kt)("p",null,"with ",(0,s.kt)("inlineCode",{parentName:"p"},"yarn"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"# install peer-deps\nyarn add -D eslint @typescript-eslint/parser @typescript-eslint/types @typescript-eslint/utils\n# then install the plugin\nyarn add -D eslint-plugin-migrate-to-typescript\n")),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("p",null,"with ",(0,s.kt)("inlineCode",{parentName:"p"},"json"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// .eslintrc.json\n{\n  ...,\n  "plugins": ["migrate-to-typescript"],\n  ...\n}\n')),(0,s.kt)("p",null,"And in ",(0,s.kt)("inlineCode",{parentName:"p"},"YAML"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"---\n# .eslintrc.yaml\nplugins:\n  - migrate-to-typescript\n")),(0,s.kt)("h6",{id:"for-the-full-eslint-configuration-files-format-see-eslint-eslints-official-document---configuration-files"},"For the full ",(0,s.kt)("inlineCode",{parentName:"h6"},"eslint")," configuration files format see eslint eslint's official document - ",(0,s.kt)("a",{parentName:"h6",href:"https://eslint.org/docs/latest/user-guide/configuring/configuration-files"},"Configuration Files"),"."),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,'The "recommended" way to consume ',(0,s.kt)("inlineCode",{parentName:"p"},"eslint")," plugins is to consume it's pre-defined configurations (see ",(0,s.kt)("strong",{parentName:"p"},"Plugin's configs")," section) in the ",(0,s.kt)("inlineCode",{parentName:"p"},"extends")," property, like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// .eslintrc.json\n{\n  ...,\n  "plugins": ["migrate-to-typescript"],\n  "extends": ["plugin:migrate-to-typescript/<config-name>"],\n  ...\n}\n')),(0,s.kt)("h2",{id:"plugins-configs"},"Plugin's configs"),(0,s.kt)("h3",{id:"node-js-with-ts"},"node-js-with-ts"),(0,s.kt)("p",null,"For projects that include both ",(0,s.kt)("inlineCode",{parentName:"p"},".ts")," and ",(0,s.kt)("inlineCode",{parentName:"p"},".js")," files. Designed to support migration to ",(0,s.kt)("inlineCode",{parentName:"p"},"typescript"),"."),(0,s.kt)("p",null,"usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'  // .eslintrc.json\n  {\n    ...,\n    "plugins": ["migrate-to-typescript"],\n    "extends": ["plugin:migrate-to-typescript/node-js-with-ts"],\n    ...\n  }\n')),(0,s.kt)("h6",{id:"see-what-rules-this-config-includes-here"},"See what rules this config includes ",(0,s.kt)("a",{parentName:"h6",href:"/eslint-plugins/docs/plugins/migrate-to-typescript/configs/node-js-with-ts"},"here")),(0,s.kt)("h3",{id:"node-ts-only"},"node-ts-only"),(0,s.kt)("p",null,"For ",(0,s.kt)("inlineCode",{parentName:"p"},"typescript")," projects. Designed to enforce the prevention of using ",(0,s.kt)("inlineCode",{parentName:"p"},"commonjs")," syntax together with ",(0,s.kt)("inlineCode",{parentName:"p"},"typescript"),"."),(0,s.kt)("p",null,"usage:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'  // .eslintrc.json\n  {\n    ...,\n    "plugins": ["migrate-to-typescript"],\n    "extends": ["plugin:migrate-to-typescript/node-ts-only"],\n    ...\n  }\n')),(0,s.kt)("h6",{id:"see-what-rules-this-config-includes-here-1"},"See what rules this config includes ",(0,s.kt)("a",{parentName:"h6",href:"/eslint-plugins/docs/plugins/migrate-to-typescript/configs/node-ts-only"},"here")),(0,s.kt)("h2",{id:"use-rules-manually"},"Use rules manually"),(0,s.kt)("p",null,"You can view the full rules list ",(0,s.kt)("a",{parentName:"p",href:"/eslint-plugins/docs/plugins/migrate-to-typescript/rules/"},"here")))}d.isMDXComponent=!0}}]);